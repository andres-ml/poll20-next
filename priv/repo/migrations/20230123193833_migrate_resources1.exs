defmodule Poll20.Repo.Migrations.MigrateResources1 do
  @moduledoc """
  Updates resources based on their most recent snapshots.

  This file was autogenerated with `mix ash_postgres.generate_migrations`
  """

  use Ecto.Migration

  def up do
    create table(:votes, primary_key: false) do
      add :id, :uuid, null: false, primary_key: true
      add :value, :bigint, null: false
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :game_id, :uuid, null: false
      add :member_id, :uuid, null: false
    end

    create table(:sessions, primary_key: false) do
      add :id, :uuid, null: false, primary_key: true
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :game_id, :uuid, null: false
    end

    create table(:session_members, primary_key: false) do
      add :id, :uuid, null: false, primary_key: true
      add :winner, :boolean, null: false
      add :vote, :text

      add :session_id,
          references(:sessions,
            column: :id,
            name: "session_members_session_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :user_id, :uuid, null: false
    end

    create table(:rooms, primary_key: false) do
      add :id, :uuid, null: false, primary_key: true
      add :name, :text, null: false
      add :invite_code, :uuid, null: false
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
    end

    create table(:members, primary_key: false) do
      add :id, :uuid, null: false, primary_key: true
    end

    alter table(:session_members) do
      modify :user_id,
             references(:members,
               column: :id,
               prefix: "public",
               name: "session_members_user_id_fkey",
               type: :uuid
             )
    end

    alter table(:members) do
      add :room_id,
          references(:rooms,
            column: :id,
            name: "members_room_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :name, :text, null: false
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
    end

    create table(:games, primary_key: false) do
      add :id, :uuid, null: false, primary_key: true
    end

    alter table(:votes) do
      modify :game_id,
             references(:games,
               column: :id,
               prefix: "public",
               name: "votes_game_id_fkey",
               type: :uuid
             )
    end

    alter table(:votes) do
      modify :member_id,
             references(:members,
               column: :id,
               prefix: "public",
               name: "votes_member_id_fkey",
               type: :uuid
             )
    end

    alter table(:sessions) do
      modify :game_id,
             references(:games,
               column: :id,
               prefix: "public",
               name: "sessions_game_id_fkey",
               type: :uuid
             )
    end

    alter table(:games) do
      add :name, :text, null: false
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")
    end

    create table(:game_owners, primary_key: false) do
      add :id, :uuid, null: false, primary_key: true
      add :inserted_at, :utc_datetime_usec, null: false, default: fragment("now()")
      add :updated_at, :utc_datetime_usec, null: false, default: fragment("now()")

      add :member_id,
          references(:members,
            column: :id,
            name: "game_owners_member_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false

      add :game_id,
          references(:games,
            column: :id,
            name: "game_owners_game_id_fkey",
            type: :uuid,
            prefix: "public"
          ),
          null: false
    end
  end

  def down do
    drop constraint(:game_owners, "game_owners_game_id_fkey")

    drop constraint(:game_owners, "game_owners_member_id_fkey")

    drop table(:game_owners)

    alter table(:games) do
      remove :updated_at
      remove :inserted_at
      remove :name
    end

    drop constraint(:sessions, "sessions_game_id_fkey")

    alter table(:sessions) do
      modify :game_id, :uuid
    end

    drop constraint(:votes, "votes_member_id_fkey")

    alter table(:votes) do
      modify :member_id, :uuid
    end

    drop constraint(:votes, "votes_game_id_fkey")

    alter table(:votes) do
      modify :game_id, :uuid
    end

    drop table(:games)

    drop constraint(:members, "members_room_id_fkey")

    alter table(:members) do
      remove :updated_at
      remove :inserted_at
      remove :name
      remove :room_id
    end

    drop constraint(:session_members, "session_members_user_id_fkey")

    alter table(:session_members) do
      modify :user_id, :uuid
    end

    drop table(:members)

    drop table(:rooms)

    drop constraint(:session_members, "session_members_session_id_fkey")

    drop table(:session_members)

    drop table(:sessions)

    drop table(:votes)
  end
end